Given an integer array nums, find the 
subarray
 with the largest sum, and return its sum.

 

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.
Example 2:

Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.

// Source Code 

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int currentSum = nums[0];
        int max  =  nums[0];

        for(int i=1; i<nums.size(); i++){
            if(nums[i] > (currentSum + nums[i])){
                currentSum = nums[i];
            }
            else{
                currentSum += nums[i];
            }
            if(currentSum > max){
                max = currentSum;
            }
        }
        return max;
    }
};
