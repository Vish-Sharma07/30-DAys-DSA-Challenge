Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.

Return any array that satisfies this condition.

 

Example 1:

Input: nums = [3,1,2,4]
Output: [2,4,3,1]
Explanation: The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.

// Source Code

class Solution {
public:
    vector<int> sortArrayByParity(vector<int>& nums) {
        // Custom predicate for partitioning
        auto isEven = [](int num) -> bool {
            return num % 2 == 0;
        };

        // Partition the array such that even numbers come before odd numbers
        partition(nums.begin(), nums.end(), isEven);
        
        return nums;
    }
};
